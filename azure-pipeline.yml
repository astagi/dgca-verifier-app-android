name: dgca-verifier-app-android

trigger:
- none

resources:
  repositories:
  - repository: dgca-app-core-android
    type: github
    name: eu-digital-green-certificates/dgca-app-core-android
    ref: 'refs/tags/1.0.0'
    endpoint: 'GitHub - it-eucert-team'

pool:
  vmImage: 'ubuntu-latest'

steps:

- checkout: self
  clean: true
- checkout: dgca-app-core-android
- script: |
    ls -l

- task: Gradle@2
  inputs:
    gradleWrapperFile: 'dgca-verifier-app-android/gradlew'
    workingDirectory: 'dgca-verifier-app-android'
    tasks: ':app:bundleRelease'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    gradleOptions: '-Xmx3072m'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false

- task: CopyFiles@2
  inputs:
    contents: '**/*.aab'
    targetFolder: '$(build.artifactStagingDirectory)'

# - task: AndroidSigning@3
#   inputs:
#     apkFiles: '$(build.artifactStagingDirectory)/app/build/outputs/apk/release/app-release-unsigned.apk'
#     apksignerKeystoreFile: 'debug.jks'
#     apksignerKeystorePassword: '$(keystorepassword)'
#     apksignerKeystoreAlias: '$(keystorealias)'
#     apksignerKeyPassword: '$(keystorepassword)'
#     zipalign: false

# - task: AndroidSigning@2
#   inputs:
#     apkFiles: '**/*.aab'
#     jarsign: true
#     jarsignerKeystoreFile: 'yourkeystore.jks'
#     jarsignerKeystorePassword: '$(yourSecretKeystorePassword)'
#     jarsignerKeystoreAlias: 'yourkeystore.alias'
#     jarsignerKeyPassword: '$(yourSecretKeyPassword)'
#     # The two Arguments working there magic:
#     jarsignerArguments: '-sigalg SHA256withRSA -digestalg SHA-256'
#     zipalign: true

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Pipeline.Workspace)'
    artifactName: 'outputs'
    artifactType: 'container'

# - task: AppCenterDistribute@3
#   inputs:
#     serverEndpoint: 'DGC-App'
#     appSlug: 'sogei/dgca-verifier-app-android'
#     appFile: '$(build.artifactStagingDirectory)/'
#     releaseNotesOption: 'input'
#     releaseNotesInput: 'Prova'
#     destinationType: 'groups'